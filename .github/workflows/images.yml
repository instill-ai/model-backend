name: Build and Push Images

on:
  workflow_call:
  release:
    types: [published]

jobs:
  build-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Free disk space
        run: |
          mkdir /tmp/test
          df --human-readable
          sudo apt clean
          docker rmi $(docker image ls --all --quiet)
          rm --recursive --force "$AGENT_TOOLSDIRECTORY"
          df --human-readable

      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.botGitHubToken }}

      - name: Load .env file
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: builder
        with:
          driver-opts: image=moby/buildkit:master

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: dropletbot
          password: ${{ secrets.botDockerHubPassword }}

      - name: Build and push (latest)
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          builder: ${{ steps.builder.outputs.name }}
          context: .
          push: true
          provenance: false
          build-args: |
            SERVICE_NAME=model-backend
          tags: instill/model-backend:latest
          cache-from: type=registry,ref=instill/model-backend:buildcache
          cache-to: type=registry,ref=instill/model-backend:buildcache,mode=max

      - name: Set Versions
        if: github.event_name == 'release'
        uses: actions/github-script@v6
        id: set_version
        with:
          script: |
            const tag = '${{ github.ref_name }}'
            const no_v_tag = tag.replace('v', '')
            core.setOutput('tag', tag)
            core.setOutput('no_v_tag', no_v_tag)

      - name: Build and push (release)
        if: github.event_name == 'release'
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          builder: ${{ steps.builder.outputs.name }}
          context: .
          push: true
          provenance: false
          build-args: |
            SERVICE_NAME=model-backend
          tags: instill/model-backend:${{steps.set_version.outputs.no_v_tag}}
          cache-from: type=registry,ref=instill/model-backend:buildcache
          cache-to: type=registry,ref=instill/model-backend:buildcache,mode=max
