openapi: "3.0.3"
info:
  contact:
    email: "hello@instill.tech"
  description: "This is API specification of model server"
  termsOfService: "http://swagger.io/terms/"
  title: "Model Server"
  version: "0.0.1"
externalDocs:
  description: "Learn more from our documentation"
  url: "https://docs.instill.tech"
servers:
- url: "https://api.instill.tech"
tags:
- description: "Everything about your models"
  externalDocs:
    description: "Learn more from our documentation"
    url: "https://docs.instill.tech"
  name: "Model"
- description: "Model service health"
  externalDocs:
    description: "Learn more from our documentation"
    url: "https://docs.instill.tech"
  name: "Health"
paths:
  /health/model:
    get:
      operationId: "getModelHealth"
      responses:
        "200":
          content:
            application/json:
              examples:
                health:
                  $ref: "#/components/examples/Health"
              schema:
                $ref: "#/components/schemas/Health"
          description: "Server is ready for serving requests"
        "503":
          content:
            application/problem+json:
              example:
                status: 503
                title: "Service Unavailable"
                detail: "Model API is not ready"
                duration: 0.01
              schema:
                $ref: "#/components/schemas/Error"
          description: "Service Unavailable"
      summary: "Get Model API health status"
      tags:
      - "Health"
  /models:
    get:
      operationId: "getModels"
      parameters:
      - description: "Model visibility. If visibility is public, the api will query\
          \ all public models which is yours or in your organization. If it is private,\
          \ the api will query private models which is yours or in your organization."
        explode: true
        in: "query"
        name: "visibility"
        required: false
        schema:
          example: "public"
          type: "string"
        style: "form"
      - description: "How many models to return at one time (max 100)"
        explode: true
        in: "query"
        name: "limit"
        required: false
        schema:
          default: 10
          format: "int32"
          type: "integer"
        style: "form"
      - description: "The zero-based offset index into the results"
        explode: true
        in: "query"
        name: "offset"
        required: false
        schema:
          default: 0
          format: "int32"
          type: "integer"
        style: "form"
      - description: "Search query term (TBD)"
        explode: true
        in: "query"
        name: "q"
        required: false
        schema:
          default: "null"
          type: "string"
        style: "form"
      responses:
        "200":
          content:
            application/json:
              examples:
                models:
                  $ref: "#/components/examples/ListOfModels"
              schema:
                allOf:
                - $ref: "#/components/schemas/RequestInfo"
                - $ref: "#/components/schemas/ResourceInfo"
                properties:
                  contents:
                    items:
                      $ref: "#/components/schemas/Model"
                    type: "array"
                type: "object"
          description: "Success"
        "400":
          content:
            application/problem+json:
              example:
                status: 400
                title: "Bad Request"
                detail: "The detail will vary depending on the cause."
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Bad Request"
        "401":
          content:
            application/problem+json:
              example:
                status: 401
                title: "Unauthorized"
                detail: "Request is unauthorized."
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Unauthorized"
        "500":
          content:
            application/problem+json:
              example:
                status: 500
                title: "Internal Server Error"
                detail: "Something went wrong. Retry or contact support at hello@instill.tech"
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Internal Server Error"
      security:
      - bearerAuth: []
      summary: "List all your own models and models in your organization"
      tags:
      - "Model"
    post:
      operationId: "addModel"
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UploadModelPayload"
        description: "Model object that needs to be added to model server"
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                postedModel:
                  $ref: "#/components/examples/Model"
              schema:
                allOf:
                - $ref: "#/components/schemas/Model"
                - $ref: "#/components/schemas/RequestInfo"
                - $ref: "#/components/schemas/ResourceInfo"
          description: "Success"
        "400":
          content:
            application/problem+json:
              example:
                status: 400
                title: "Bad Request"
                detail: "The detail will vary depending on the cause."
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Bad Request"
        "401":
          content:
            application/problem+json:
              example:
                status: 401
                title: "Unauthorized"
                detail: "Request is unauthorized."
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Unauthorized"
        "500":
          content:
            application/problem+json:
              example:
                status: 500
                title: "Internal Server Error"
                detail: "Something went wrong. Retry or contact support at hello@instill.tech"
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Internal Server Error"
      security:
      - bearerAuth: []
      summary: "Upload a model to the server"
      tags:
      - "Model"
  /models/{id}:
    delete:
      description: "Returns status"
      operationId: "deleteModelById"
      parameters:
      - description: "model unique id"
        explode: false
        in: "path"
        name: "id"
        required: true
        schema:
          example: "c64j82t9481afoqqqa10"
          type: "string"
        style: "simple"
      responses:
        "204":
          description: "No Content"
        "401":
          content:
            application/problem+json:
              example:
                status: 401
                title: "Unauthorized"
                detail: "Request is unauthorized."
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Unauthorized"
        "403":
          content:
            application/problem+json:
              example:
                status: 403
                title: "Forbidden"
                detail: "The request does not have access rights to the requested\
                  \ resource."
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Forbidden"
        "404":
          content:
            application/problem+json:
              example:
                status: 404
                title: "Not Found"
                detail: "The requested resource is not found."
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Not Found"
        "500":
          content:
            application/problem+json:
              example:
                status: 500
                title: "Internal Server Error"
                detail: "Something went wrong. Retry or contact support at hello@instill.tech"
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Internal Server Error"
      security:
      - bearerAuth: []
      summary: "Delete a your own model"
      tags:
      - "Model"
    get:
      description: "Returns model specified by id"
      operationId: "getModelById"
      parameters:
      - description: "model unique id"
        explode: false
        in: "path"
        name: "id"
        required: true
        schema:
          example: "c64j82t9481afoqqqa10"
          type: "string"
        style: "simple"
      responses:
        "200":
          content:
            application/json:
              examples:
                model:
                  $ref: "#/components/examples/Model"
              schema:
                allOf:
                - $ref: "#/components/schemas/Model"
                - $ref: "#/components/schemas/RequestInfo"
                type: "object"
          description: "Success"
        "401":
          content:
            application/problem+json:
              example:
                status: 401
                title: "Unauthorized"
                detail: "Request is unauthorized."
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Unauthorized"
        "403":
          content:
            application/problem+json:
              example:
                status: 403
                title: "Forbidden"
                detail: "The request does not have access rights to the requested\
                  \ resource."
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Forbidden"
        "404":
          content:
            application/problem+json:
              example:
                status: 404
                title: "Not Found"
                detail: "The requested resource is not found."
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Not Found"
        "500":
          content:
            application/problem+json:
              example:
                status: 500
                title: "Internal Server Error"
                detail: "Something went wrong. Retry or contact support at hello@instill.tech"
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Internal Server Error"
      security:
      - bearerAuth: []
      summary: "Find a your own model or a model in your organization"
      tags:
      - "Model"
    patch:
      description: "Returns a model specified by id"
      operationId: "updateModelById"
      parameters:
      - description: "model unique id"
        explode: false
        in: "path"
        name: "id"
        required: true
        schema:
          example: "c64j82t9481afoqqqa10"
          type: "string"
        style: "simple"
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdateModelPayload"
        description: "Model information that needs to be updated"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                patchedModel:
                  $ref: "#/components/examples/Model"
              schema:
                allOf:
                - $ref: "#/components/schemas/Model"
                - $ref: "#/components/schemas/RequestInfo"
                - $ref: "#/components/schemas/ResourceInfo"
          description: "Success"
        "401":
          content:
            application/problem+json:
              example:
                status: 401
                title: "Unauthorized"
                detail: "Request is unauthorized."
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Unauthorized"
        "403":
          content:
            application/problem+json:
              example:
                status: 403
                title: "Forbidden"
                detail: "The request does not have access rights to the requested\
                  \ resource."
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Forbidden"
        "404":
          content:
            application/problem+json:
              example:
                status: 404
                title: "Not Found"
                detail: "The requested resource is not found."
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Not Found"
        "500":
          content:
            application/problem+json:
              example:
                status: 500
                title: "Internal Server Error"
                detail: "Something went wrong. Retry or contact support at hello@instill.tech"
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Internal Server Error"
      security:
      - bearerAuth: []
      summary: "Update a your own model"
      tags:
      - "Model"
  /models/{id}/versions:
    get:
      description: "Returns list of model versions which belong to your own model\
        \ or your organization's model specified by id"
      operationId: "getModelVersions"
      parameters:
      - description: "model unique id"
        explode: false
        in: "path"
        name: "id"
        required: true
        schema:
          example: "c64j82t9481afoqqqa10"
          type: "string"
        style: "simple"
      responses:
        "200":
          content:
            application/json:
              examples:
                modelVersions:
                  $ref: "#/components/examples/ListOfModelVersions"
              schema:
                allOf:
                - $ref: "#/components/schemas/RequestInfo"
                - $ref: "#/components/schemas/ResourceInfo"
                properties:
                  contents:
                    items:
                      $ref: "#/components/schemas/ModelVersion"
                    type: "array"
                type: "object"
          description: "Success"
        "401":
          content:
            application/problem+json:
              example:
                status: 401
                title: "Unauthorized"
                detail: "Request is unauthorized."
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Unauthorized"
        "403":
          content:
            application/problem+json:
              example:
                status: 403
                title: "Forbidden"
                detail: "The request does not have access rights to the requested\
                  \ resource."
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Forbidden"
        "404":
          content:
            application/problem+json:
              example:
                status: 404
                title: "Not Found"
                detail: "The requested resource is not found."
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Not Found"
        "500":
          content:
            application/problem+json:
              example:
                status: 500
                title: "Internal Server Error"
                detail: "Something went wrong. Retry or contact support at hello@instill.tech"
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Internal Server Error"
      security:
      - bearerAuth: []
      summary: "Get list of your own model versions or model versions in your organization"
      tags:
      - "Model"
    post:
      description: "Returns a model version which belong to your own model specified\
        \ by id"
      operationId: "uploadModelVersion"
      parameters:
      - description: "model unique id"
        explode: false
        in: "path"
        name: "id"
        required: true
        schema:
          example: "c64j82t9481afoqqqa10"
          type: "string"
        style: "simple"
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UploadModelVersionPayload"
        description: "model information that needs to be updated"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                modelVersion:
                  $ref: "#/components/examples/ModelVersion"
              schema:
                allOf:
                - $ref: "#/components/schemas/ModelVersion"
                - $ref: "#/components/schemas/RequestInfo"
                type: "object"
          description: "Success"
        "401":
          content:
            application/problem+json:
              example:
                status: 401
                title: "Unauthorized"
                detail: "Request is unauthorized."
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Unauthorized"
        "403":
          content:
            application/problem+json:
              example:
                status: 403
                title: "Forbidden"
                detail: "The request does not have access rights to the requested\
                  \ resource."
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Forbidden"
        "404":
          content:
            application/problem+json:
              example:
                status: 404
                title: "Not Found"
                detail: "The requested resource is not found."
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Not Found"
        "500":
          content:
            application/problem+json:
              example:
                status: 500
                title: "Internal Server Error"
                detail: "Something went wrong. Retry or contact support at hello@instill.tech"
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Internal Server Error"
      security:
      - bearerAuth: []
      summary: "Upload a model version"
      tags:
      - "Model"
  /models/{id}/versions/{version}:
    delete:
      description: "Returns status"
      operationId: "deleteModelVersion"
      parameters:
      - description: "model unique id"
        explode: false
        in: "path"
        name: "id"
        required: true
        schema:
          example: "c64j82t9481afoqqqa10"
          type: "string"
        style: "simple"
      - description: "model version"
        explode: false
        in: "path"
        name: "version"
        required: true
        schema:
          default: 1
          type: "integer"
        style: "simple"
      responses:
        "204":
          description: "No Content"
        "401":
          content:
            application/problem+json:
              example:
                status: 401
                title: "Unauthorized"
                detail: "Request is unauthorized."
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Unauthorized"
        "403":
          content:
            application/problem+json:
              example:
                status: 403
                title: "Forbidden"
                detail: "The request does not have access rights to the requested\
                  \ resource."
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Forbidden"
        "404":
          content:
            application/problem+json:
              example:
                status: 404
                title: "Not Found"
                detail: "The requested resource is not found."
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Not Found"
        "500":
          content:
            application/problem+json:
              example:
                status: 500
                title: "Internal Server Error"
                detail: "Something went wrong. Retry or contact support at hello@instill.tech"
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Internal Server Error"
      security:
      - bearerAuth: []
      summary: "Delete a your own model version"
      tags:
      - "Model"
    get:
      description: "Returns a model version which belong to your own model or your\
        \ organization' model specified by id"
      operationId: "getModelVersion"
      parameters:
      - description: "model unique id"
        explode: false
        in: "path"
        name: "id"
        required: true
        schema:
          example: "c64j82t9481afoqqqa10"
          type: "string"
        style: "simple"
      - description: "model version"
        explode: false
        in: "path"
        name: "version"
        required: true
        schema:
          default: 1
          type: "integer"
        style: "simple"
      responses:
        "200":
          content:
            application/json:
              examples:
                modelVersion:
                  $ref: "#/components/examples/ModelVersion"
              schema:
                allOf:
                - $ref: "#/components/schemas/ModelVersion"
                - $ref: "#/components/schemas/RequestInfo"
          description: "Success"
        "401":
          content:
            application/problem+json:
              example:
                status: 401
                title: "Unauthorized"
                detail: "Request is unauthorized."
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Unauthorized"
        "403":
          content:
            application/problem+json:
              example:
                status: 403
                title: "Forbidden"
                detail: "The request does not have access rights to the requested\
                  \ resource."
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Forbidden"
        "404":
          content:
            application/problem+json:
              example:
                status: 404
                title: "Not Found"
                detail: "The requested resource is not found."
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Not Found"
        "500":
          content:
            application/problem+json:
              example:
                status: 500
                title: "Internal Server Error"
                detail: "Something went wrong. Retry or contact support at hello@instill.tech"
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Internal Server Error"
      security:
      - bearerAuth: []
      summary: "Find a your own model version or a model version in your organization"
      tags:
      - "Model"
    patch:
      description: "Returns updated model version which belong to your own model specified\
        \ by id"
      operationId: "updateModelVersion"
      parameters:
      - description: "model unique id"
        explode: false
        in: "path"
        name: "id"
        required: true
        schema:
          example: "c64j82t9481afoqqqa10"
          type: "string"
        style: "simple"
      - description: "model version"
        explode: false
        in: "path"
        name: "version"
        required: true
        schema:
          default: 1
          type: "integer"
        style: "simple"
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdateModelVersionPayload"
        description: "Update model version information"
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                updatedModelVersion:
                  $ref: "#/components/examples/ModelVersion"
              schema:
                allOf:
                - $ref: "#/components/schemas/ModelVersion"
                - $ref: "#/components/schemas/RequestInfo"
          description: "Success"
        "401":
          content:
            application/problem+json:
              example:
                status: 401
                title: "Unauthorized"
                detail: "Request is unauthorized."
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Unauthorized"
        "403":
          content:
            application/problem+json:
              example:
                status: 403
                title: "Forbidden"
                detail: "The request does not have access rights to the requested\
                  \ resource."
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Forbidden"
        "404":
          content:
            application/problem+json:
              example:
                status: 404
                title: "Not Found"
                detail: "The requested resource is not found."
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Not Found"
        "500":
          content:
            application/problem+json:
              example:
                status: 500
                title: "Internal Server Error"
                detail: "Something went wrong. Retry or contact support at hello@instill.tech"
                duration: 0.05
              schema:
                $ref: "#/components/schemas/Error"
          description: "Internal Server Error"
      security:
      - bearerAuth: []
      summary: "Update a your own model version"
      tags:
      - "Model"
components:
  examples:
    Health:
      summary: "The health status of Model API"
      value:
        status: 200
        duration: 0.1
    ModelVersion:
      summary: "The model version information"
      value:
        duration: 0.05
        self: "https://api.instill.tech/models/c64j82t9481afoqqqa10/versions/1"
        kind: "ModelVersion"
        version: 1
        description: "First version model based on Resnet34 architect"
        created_at: "2021-11-23T04:56:07.000+00:00"
        updated_at: "2021-11-23T04:56:07.000+00:00"
        status: "online"
        metadata: {}
    ListOfModelVersions:
      summary: "The list of model versions"
      value:
        duration: 0.05
        self: "https://api.instill.tech/models/c64j82t9481afoqqqa10/versions"
        kind: "Collection"
        contents:
        - self: "https://api.instill.tech/models/c64j82t9481afoqqqa10/versions/1"
          kind: "ModelVersion"
          version: 1
          status: "offline"
          description: "First version model based on Resnet34 architect"
          created_at: "2021-11-23T04:56:07.000+00:00"
          updated_at: "2021-11-23T04:56:07.000+00:00"
          metadata: {}
    Model:
      summary: "The model information"
      value:
        duration: 0.05
        self: "https://api.instill.tech/models/c64j82t9481afoqqqa10"
        kind: "Model"
        name: "Human detection"
        id: "c64j82t9481afoqqqa10"
        optimized: false
        description: "Human detection model using Resnet34"
        type: "tensorrt"
        framework: "pytorch"
        created_at: "2021-11-23T04:56:07.000+00:00"
        updated_at: "2021-11-23T04:56:07.000+00:00"
        organization: "instill.tech"
        icon: "gcs://icons/man.png"
        visibility: "public"
        versions:
        - self: "https://api.instill.tech/models/c64j82t9481afoqqqa10/versions/1"
          kind: "ModelVersion"
          version: 1
          description: "First version model based on Resnet34 architect"
          created_at: "2021-11-23T04:56:07.000+00:00"
          updated_at: "2021-11-23T04:56:07.000+00:00"
          status: "online"
    PublicModels:
      summary: "The list of public models"
      value:
        duration: 0.05
        self: "https://api.instill.tech/public/models"
        kind: "Collection"
        contents:
        - self: "https://api.instill.tech/models/c64j82t9481afoqqqa10"
          kind: "Model"
          name: "Human detection"
          id: "c64j82t9481afoqqqa10"
          optimized: false
          description: "Human detection model using Resnet34"
          type: "tensorrt"
          framework: "pytorch"
          created_at: "2021-11-23T04:56:07.000+00:00"
          updated_at: "2021-11-23T04:56:07.000+00:00"
          organization: "instill.tech"
          icon: "gcs://icons/man.png"
          visibility: "public"
          versions:
          - self: "https://api.instill.tech/models/c64j82t9481afoqqqa10/versions/1"
            kind: "ModelVersion"
            version: 1
            description: "First version model based on Resnet34 architect"
            created_at: "2021-11-23T04:56:07.000+00:00"
            updated_at: "2021-11-23T04:56:07.000+00:00"
            status: "online"
    ListOfModels:
      summary: "The list of models"
      value:
        duration: 0.05
        self: "https://api.instill.tech/models"
        kind: "Collection"
        contents:
        - self: "https://api.instill.tech/models/c64j82t9481afoqqqa10"
          kind: "Model"
          name: "Human detection"
          id: "c64j82t9481afoqqqa10"
          optimized: false
          description: "Human detection model using Resnet34"
          type: "tensorrt"
          framework: "pytorch"
          created_at: "2021-11-23T04:56:07.000+00:00"
          updated_at: "2021-11-23T04:56:07.000+00:00"
          organization: "instill.tech"
          icon: "gcs://icons/man.png"
          visibility: "public"
          versions:
          - self: "https://api.instill.tech/models/c64j82t9481afoqqqa10/versions/1"
            kind: "ModelVersion"
            version: 1
            description: "First version model based on Resnet34 architect"
            created_at: "2021-11-23T04:56:07.000+00:00"
            updated_at: "2021-11-23T04:56:07.000+00:00"
            status: "online"
  parameters:
    visibility:
      description: "Model visibility. If visibility is public, the api will query\
        \ all public models which is yours or in your organization. If it is private,\
        \ the api will query private models which is yours or in your organization."
      explode: true
      in: "query"
      name: "visibility"
      required: false
      schema:
        example: "public"
        type: "string"
      style: "form"
    id:
      description: "model unique id"
      explode: false
      in: "path"
      name: "id"
      required: true
      schema:
        example: "c64j82t9481afoqqqa10"
        type: "string"
      style: "simple"
    version:
      description: "model version"
      explode: false
      in: "path"
      name: "version"
      required: true
      schema:
        default: 1
        type: "integer"
      style: "simple"
    q:
      description: "Search query term (TBD)"
      explode: true
      in: "query"
      name: "q"
      required: false
      schema:
        default: "null"
        type: "string"
      style: "form"
    limit:
      description: "How many models to return at one time (max 100)"
      explode: true
      in: "query"
      name: "limit"
      required: false
      schema:
        default: 10
        format: "int32"
        type: "integer"
      style: "form"
    offset:
      description: "The zero-based offset index into the results"
      explode: true
      in: "query"
      name: "offset"
      required: false
      schema:
        default: 0
        format: "int32"
        type: "integer"
      style: "form"
  responses:
    NoContentResponse:
      description: "No Content"
    BadRequestError:
      content:
        application/problem+json:
          example:
            status: 400
            title: "Bad Request"
            detail: "The detail will vary depending on the cause."
            duration: 0.05
          schema:
            $ref: "#/components/schemas/Error"
      description: "Bad Request"
    UnauthorizedError:
      content:
        application/problem+json:
          example:
            status: 401
            title: "Unauthorized"
            detail: "Request is unauthorized."
            duration: 0.05
          schema:
            $ref: "#/components/schemas/Error"
      description: "Unauthorized"
    ForbiddenError:
      content:
        application/problem+json:
          example:
            status: 403
            title: "Forbidden"
            detail: "The request does not have access rights to the requested resource."
            duration: 0.05
          schema:
            $ref: "#/components/schemas/Error"
      description: "Forbidden"
    NotFoundError:
      content:
        application/problem+json:
          example:
            status: 404
            title: "Not Found"
            detail: "The requested resource is not found."
            duration: 0.05
          schema:
            $ref: "#/components/schemas/Error"
      description: "Not Found"
    InternalServerError:
      content:
        application/problem+json:
          example:
            status: 500
            title: "Internal Server Error"
            detail: "Something went wrong. Retry or contact support at hello@instill.tech"
            duration: 0.05
          schema:
            $ref: "#/components/schemas/Error"
      description: "Internal Server Error"
    ServiceUnavailableError:
      content:
        application/problem+json:
          example:
            status: 503
            title: "Service Unavailable Error"
            detail: "Management API is not ready"
            duration: 0.05
          schema:
            $ref: "#/components/schemas/Error"
      description: "Service Unavailable"
  schemas:
    UpdateModelVersionPayload:
      properties:
        description:
          description: "Model version description"
          maxLength: 1024
          type: "string"
        metadata:
          description: "Model version metadata"
          type: "string"
      type: "object"
    UploadModelVersionPayload:
      properties:
        description:
          description: "Model version description"
          maxLength: 1024
          type: "string"
        source:
          description: "Model weight and configuration following Triton format"
          format: "binary"
          type: "string"
        metadata:
          description: "Model version metadata"
          type: "string"
      required:
      - "source"
      type: "object"
    UpdateModelPayload:
      properties:
        name:
          description: "Model name"
          type: "string"
        description:
          description: "Model description"
          maxLength: 1024
          type: "string"
        visibility:
          default: "private"
          description: "Model visibility (public or private)"
          enum:
          - "public"
          - "private"
          type: "string"
      type: "object"
    UploadModelPayload:
      properties:
        name:
          description: "Model name"
          maxLength: 256
          type: "string"
        description:
          description: "Model description"
          maxLength: 1024
          type: "string"
        type:
          default: "tensorrt"
          description: "Model type such as tensorrt, onmx, etc (currently we only\
            \ support tensorrt)"
          enum:
          - "tensorrt"
          type: "string"
        framework:
          default: "pytorch"
          description: "Model framework such as pytorch, tensorflow, etc (currently\
            \ we only support pytorch framework)"
          enum:
          - "pytorch"
          type: "string"
        optimized:
          default: false
          description: "Model optimization enable or not (currently we not support\
            \ optimizing model yet)"
          type: "boolean"
        source:
          description: "Model weight and configuration following Triton format"
          format: "binary"
          type: "string"
        visibility:
          default: "private"
          description: "Model visibility (public or private)"
          enum:
          - "public"
          - "private"
          type: "string"
      required:
      - "framework"
      - "name"
      - "source"
      - "type"
      type: "object"
    RequestInfo:
      properties:
        duration:
          description: "The duration in milliseconds (s) it takes for a request to\
            \ be processed"
          example: 0.05
          format: "double"
          type: "number"
    ResourceInfo:
      properties:
        self:
          description: "Endpoint that generated this resource"
          format: "url"
          type: "string"
        kind:
          description: "Type of this resource"
          type: "string"
    ModelVersion:
      allOf:
      - $ref: "#/components/schemas/ResourceInfo"
      properties:
        version:
          default: 1
          description: "Model version"
          type: "integer"
        description:
          description: "Model description"
          maxLength: 1024
          type: "string"
        created_at:
          description: "Model version created date time"
          format: "date-time"
          type: "string"
        updated_at:
          description: "Model version updated date time"
          format: "date-time"
          type: "string"
        metadata:
          description: "Model version metadata"
          type: "object"
        status:
          default: "offline"
          description: "Model version status"
          enum:
          - "offline"
          - "online"
          - "error"
          type: "string"
      type: "object"
    Model:
      allOf:
      - $ref: "#/components/schemas/ResourceInfo"
      properties:
        name:
          description: "Model name"
          maxLength: 256
          type: "string"
        id:
          description: "Model unique ID"
          maxLength: 256
          type: "string"
        optimized:
          default: false
          description: "Option for model optimization (currently not support yet)"
          type: "boolean"
        description:
          description: "Model description"
          maxLength: 1024
          type: "string"
        type:
          default: "tensorrt"
          description: "Supportted model type (current only support tensorrt)"
          enum:
          - "tensorrt"
          type: "string"
        framework:
          default: "pytorch"
          description: "Supportted framework (current only support pytorch)"
          enum:
          - "pytorch"
          type: "string"
        created_at:
          description: "Model created date time"
          format: "date-time"
          type: "string"
        updated_at:
          description: "Model updated date time"
          format: "date-time"
          type: "string"
        organization:
          description: "Organization in which model belong to"
          type: "string"
        icon:
          description: "Model icon url"
          type: "string"
        visibility:
          default: "private"
          description: "Model visibility (public or private)"
          enum:
          - "public"
          - "private"
          type: "string"
        versions:
          description: "List of model versions"
          items:
            $ref: "#/components/schemas/ModelVersion"
          type: "array"
      type: "object"
    Error:
      allOf:
      - $ref: "#/components/schemas/RequestInfo"
      properties:
        status:
          description: "Error code"
          type: "integer"
        title:
          description: "Short description of the error"
          type: "string"
        detail:
          description: "Human-readable error message"
          type: "string"
      type: "object"
    Health:
      allOf:
      - $ref: "#/components/schemas/RequestInfo"
      example:
        status: 0
      properties:
        status:
          description: "The status of the API health"
          type: "integer"
      type: "object"
  securitySchemes:
    bearerAuth:
      bearerFormat: "JWT"
      description: "Get access to the Instill APIs using the [OAuth 2.0 Authorization\
        \ framework](https://datatracker.ietf.org/doc/html/rfc6749)"
      scheme: "bearer"
      type: "http"
x-tagGroups:
- name: "API calls"
  tags:
  - "Model"
  - "Health"
