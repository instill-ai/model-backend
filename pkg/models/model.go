/*
 * Model Server
 *
 * This is API specification of model server
 *
 * API version: 0.0.1
 * Contact: hello@instill.tech
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package models

import (
	"database/sql/driver"
	"encoding/json"
	"time"
)

// Thoese model structures used to work with database
type Model struct {

	// Model unique ID
	Id int32 `json:"id,omitempty"`

	// Model name
	Name string `json:"name,omitempty"`

	// Option for model optimization (currently not support yet)
	Optimized bool `json:"optimized,omitempty"`

	// Model description
	Description string `json:"description,omitempty"`

	// Supportted model type (current only support tensorrt)
	Type string `json:"type,omitempty"`

	// Supportted framework (current only support pytorch)
	Framework string `json:"framework,omitempty"`

	// Model created date time
	CreatedAt time.Time `gorm:"type:timestamp"`

	// Model modified date time
	UpdatedAt time.Time `gorm:"type:timestamp"`

	// Organization in which model belong to
	Organization string `json:"organization,omitempty"`

	Icon string `json:"icon,omitempty"`

	// Model visibility (public or private)
	Visibility string `json:"visibility,omitempty"`

	// model author
	Author string `json:"author,omitempty"`

	// workspace name where model belong to
	Namespace string

	FullName string
}

type Version struct {
	// Model unique ID
	ModelId int32 `json:"model_id,omitempty"`

	// Model version
	Version int32 `json:"version,omitempty"`

	// Model description
	Description string `json:"description,omitempty"`

	// Model version created date time
	CreatedAt time.Time `gorm:"type:timestamp"`

	// Model version updated date time
	UpdatedAt time.Time `gorm:"type:timestamp"`

	// Model version status
	Status string `json:"status,omitempty"`

	// Model version metadata
	Metadata JSONB `gorm:"type:jsonb"`

	// Model name not store in DB, only to check when upload model without known about model ID
	ModelName string
}

type JSONB map[string]interface{}

func (j JSONB) Value() (driver.Value, error) {
	valueString, err := json.Marshal(j)
	return string(valueString), err
}

func (j *JSONB) Scan(value interface{}) error {
	if err := json.Unmarshal(value.([]byte), &j); err != nil {
		return err
	}
	return nil
}

type ListModelQuery struct {
	Namespace string
}

type VersionResponse struct {
	// Model unique ID
	ModelId int32 `json:"model_id,omitempty"`

	// Model version
	Version int32 `json:"version,omitempty"`

	// Model description
	Description string `json:"description,omitempty"`

	// Model version created date time
	CreatedAt time.Time `gorm:"type:timestamp"`

	// Model version updated date time
	UpdatedAt time.Time `gorm:"type:timestamp"`

	// Model version status
	Status string `json:"status,omitempty"`
}

type ModelResponse struct {

	// Model unique ID
	Id int32 `json:"id,omitempty"`

	// Model name
	Name string `json:"name,omitempty"`

	// Option for model optimization (currently not support yet)
	Optimized bool `json:"optimized,omitempty"`

	// Model description
	Description string `json:"description,omitempty"`

	// Supportted model type (current only support tensorrt)
	Type string `json:"type,omitempty"`

	// Supportted framework (current only support pytorch)
	Framework string `json:"framework,omitempty"`

	// Model created date time
	CreatedAt time.Time `gorm:"type:timestamp"`

	// Model modified date time
	UpdatedAt time.Time `gorm:"type:timestamp"`

	// Organization in which model belong to
	Organization string `json:"organization,omitempty"`

	Icon string `json:"icon,omitempty"`

	// Model visibility (public or private)
	Visibility string `json:"visibility,omitempty"`

	// model author
	Author string `json:"author,omitempty"`

	FullName string

	Versions []VersionResponse
}
