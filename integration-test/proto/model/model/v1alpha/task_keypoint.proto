syntax = "proto3";

package model.model.v1alpha;

// Google api
import "google/api/field_behavior.proto";
import "../../../model/model/v1alpha/common.proto";

// Keypoint contains the coordinates and visibility of a keypoint in an object.
message Keypoint {
  // X coordinate.
  float x = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Y coordinate.
  float y = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Visibility.
  float v = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// KeypointObject is a detected object with its keypoints, e.g. a detected
// human shape with its legs, arms, core, etc.
message KeypointObject {
  // Keypoints.
  repeated Keypoint keypoints = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Score.
  float score = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Bounding box.
  BoundingBox bounding_box = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// KeypointInput represents the input of a keypoint detection task.
message KeypointInput {
  // Content of the input.
  oneof type {
    // Image URL.
    string image_url = 1;
    // Base64-encoded image.
    string image_base64 = 2;
  }
}

// KeypointInputStream represents the input of a keypoint detection task when
// the input is streamed as binary files.
message KeypointInputStream {
  // File length for each uploaded binary file.
  repeated uint32 file_lengths = 1 [(google.api.field_behavior) = REQUIRED];
  // Byte representation of the images.
  bytes content = 2 [(google.api.field_behavior) = REQUIRED];
}

// KeypointOutput represents the result of a keypoint detection task.
message KeypointOutput {
  // A list of keypoint objects.
  repeated KeypointObject objects = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
}
