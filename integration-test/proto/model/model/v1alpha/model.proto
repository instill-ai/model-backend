syntax = "proto3";

package model.model.v1alpha;

// Protobuf standard
import "google/protobuf/struct.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

// Google api
import "google/api/resource.proto";
import "google/api/field_behavior.proto";
import "google/longrunning/operations.proto";

import "../../../common/healthcheck/v1alpha/healthcheck.proto";
import "../../../common/task/v1alpha/task.proto";
import "../../../model/model/v1alpha/model_definition.proto";
import "../../../model/model/v1alpha/task_classification.proto";
import "../../../model/model/v1alpha/task_detection.proto";
import "../../../model/model/v1alpha/task_keypoint.proto";
import "../../../model/model/v1alpha/task_ocr.proto";
import "../../../model/model/v1alpha/task_instance_segmentation.proto";
import "../../../model/model/v1alpha/task_semantic_segmentation.proto";
import "../../../model/model/v1alpha/task_text_to_image.proto";
import "../../../model/model/v1alpha/task_text_generation.proto";
import "../../../model/model/v1alpha/task_unspecified.proto";

// LivenessRequest represents a request to check a service liveness status
message LivenessRequest {
  // HealthCheckRequest message
  optional common.healthcheck.v1alpha.HealthCheckRequest health_check_request = 1 [(google.api.field_behavior) = OPTIONAL];
}

// LivenessResponse represents a response for a service liveness status
message LivenessResponse {
  // HealthCheckResponse message
  common.healthcheck.v1alpha.HealthCheckResponse health_check_response = 1;
}

// ReadinessRequest represents a request to check a service readiness status
message ReadinessRequest {
  // HealthCheckRequest message
  optional common.healthcheck.v1alpha.HealthCheckRequest health_check_request = 1 [(google.api.field_behavior) = OPTIONAL];
}

// ReadinessResponse represents a response for a service readiness status
message ReadinessResponse {
  // HealthCheckResponse message
  common.healthcheck.v1alpha.HealthCheckResponse health_check_response = 1;
}

// Model represents a model
message Model {
  option (google.api.resource) = {
    type: "api.instill.tech/Model"
    pattern: "users/{user}/models/{model}"
  };

  // Model visibility including public or private
  enum Visibility {
    // Visibility: UNSPECIFIED, equivalent to PRIVATE.
    VISIBILITY_UNSPECIFIED = 0;
    // Visibility: PRIVATE
    VISIBILITY_PRIVATE = 1;
    // Visibility: PUBLIC
    VISIBILITY_PUBLIC = 2;
  }

  // State enumerates a model state
  enum State {
    // State: UNSPECIFIED
    STATE_UNSPECIFIED = 0;
    // State: OFFLINE
    STATE_OFFLINE = 1;
    // State: ONLINE
    STATE_ONLINE = 2;
    // State: ERROR
    STATE_ERROR = 3;
  }

  // Resource name. It must have the format of "users/{user}/models/{model}".
  // For example: "users/instill-ai/models/yolov4"
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Model ID in UUIDv4
  string uid = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Resource ID (the last segment of the resource name) used to construct the
  // resource name. This conforms to RFC-1034, which restricts to letters,
  // numbers, and hyphen, with the first character a letter, the last a letter
  // or a number, and a 63 character maximum.
  string id = 3 [(google.api.field_behavior) = IMMUTABLE];
  // Model description
  optional string description = 4 [(google.api.field_behavior) = OPTIONAL];
  // Model definition resource name
  string model_definition = 5 [
    (google.api.field_behavior) = IMMUTABLE,
    (google.api.resource_reference).type = "api.instill.tech/ModelDefinition"
  ];
  // Model configuration represents the configuration JSON that has been
  // validated using the `model_spec` JSON schema of a ModelDefinition
  google.protobuf.Struct configuration = 6 [(google.api.field_behavior) = IMMUTABLE];
  // Model task
  common.task.v1alpha.Task task = 7 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Model state
  State state = 8 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Model visibility including public or private
  Visibility visibility = 9 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Model owner
  oneof owner {
    // The resource name with UUID of a user, e.g.,
    // "users/bfb978f8-78d3-4338-aa2b-a6c699cb07c5".
    string user = 10 [
      (google.api.resource_reference).type = "api.instill.tech/User",
      (google.api.field_behavior) = OUTPUT_ONLY
    ];
    // The resource name with UUID of an organization
    string org = 11 [
      (google.api.resource_reference).type = "api.instill.tech/Organization",
      (google.api.field_behavior) = OUTPUT_ONLY
    ];
  }
  // Model create time
  google.protobuf.Timestamp create_time = 12 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Model update time
  google.protobuf.Timestamp update_time = 13 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// ModelCard represents the README card for a model. There
// exists one and exactly one README card per model.
message ModelCard {
  option (google.api.resource) = {
    type: "api.instill.tech/ModelCard"
    pattern: "users/{user}/models/{model}/readme"
  };

  // Resource name. It must have the format of
  // "users/{user}/models/{model}/readme"
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Size of the file
  int32 size = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Type of the resource. Fixed to "file".
  string type = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Content of the README file in bytes and base64 format
  bytes content = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
  // Encoding type of the content. Fixed to "base64".
  string encoding = 5 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// ListModelsRequest represents a request to list all models
message ListModelsRequest {
  // Page size: the maximum number of resources to return. The service may
  // return fewer than this value. If unspecified, at most 10 models will be
  // returned. The maximum value is 100; values above 100 will be coereced to
  // 100.
  optional int64 page_size = 1 [(google.api.field_behavior) = OPTIONAL];
  // Page token
  optional string page_token = 2 [(google.api.field_behavior) = OPTIONAL];
  // Model view (default is VIEW_BASIC)
  // VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`
  // VIEW_FULL: show full information
  optional View view = 3 [(google.api.field_behavior) = OPTIONAL];
}

// ListModelsResponse represents a response for a list of models
message ListModelsResponse {
  // a list of Models
  repeated Model models = 1;
  // Next page token
  string next_page_token = 2;
  // Total count of models
  int64 total_size = 3;
}

// LookUpModelRequest represents a request to query a model via permalink
message LookUpModelRequest {
  // Permalink of a model. For example:
  // Format: models/{uid}
  string permalink = 1 [(google.api.field_behavior) = REQUIRED];
  // Model view (default is VIEW_BASIC)
  // VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`
  // VIEW_FULL: show full information
  optional View view = 2 [(google.api.field_behavior) = OPTIONAL];
}

// LookUpModelResponse represents a response for a model
message LookUpModelResponse {
  // A model resource
  Model model = 1;
}

// CreateUserModelRequest represents a request to create a model
message CreateUserModelRequest {
  // The model to be created
  //
  // The model `name` field is used to identify the model to create.
  // Format: users/{user}/models/{model}
  Model model = 1 [(google.api.field_behavior) = REQUIRED];
  // The parent resource where this connector resource will be created.
  // Format: users/{users}
  string parent = 2 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "api.instill.tech/Model"}
  ];
}

// CreateUserModelResponse represents a response for a model
message CreateUserModelResponse {
  // Create model operation message
  google.longrunning.Operation operation = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// CreateUserModelBinaryFileUploadRequest represents a request to create a model
message CreateUserModelBinaryFileUploadRequest {
  // The model to be created
  //
  // The model `name` field is used to identify the model to create.
  // Format: users/{user}/models/{model}
  Model model = 1 [(google.api.field_behavior) = REQUIRED];
  // Model content in bytes
  bytes content = 2 [(google.api.field_behavior) = REQUIRED];
  // The parent resource where this connector resource will be created.
  // Format: users/{users}
  string parent = 3 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "api.instill.tech/Model"}
  ];
}

// CreateUserModelBinaryFileUploadResponse represents a response for a model
message CreateUserModelBinaryFileUploadResponse {
  // Create model operation message
  google.longrunning.Operation operation = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// ListUserModelsRequest represents a request to list all models
message ListUserModelsRequest {
  // Page size: the maximum number of resources to return. The service may
  // return fewer than this value. If unspecified, at most 10 models will be
  // returned. The maximum value is 100; values above 100 will be coereced to
  // 100.
  optional int64 page_size = 1 [(google.api.field_behavior) = OPTIONAL];
  // Page token
  optional string page_token = 2 [(google.api.field_behavior) = OPTIONAL];
  // Model view (default is VIEW_BASIC)
  // VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`
  // VIEW_FULL: show full information
  optional View view = 3 [(google.api.field_behavior) = OPTIONAL];
  // The parent resource where this connector resource will be created.
  // Format: users/{users}
  string parent = 4 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {child_type: "api.instill.tech/Model"}
  ];
}

// ListUserModelsResponse represents a response for a list of models
message ListUserModelsResponse {
  // a list of Models
  repeated Model models = 1;
  // Next page token
  string next_page_token = 2;
  // Total count of models
  int64 total_size = 3;
}

// GetUserModelRequest represents a request to query a model
message GetUserModelRequest {
  // Resource name of the model.
  // Format: users/{user}/models/{model}
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.instill.tech/Model",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      field_configuration: {path_param_name: "model.name"}
    }
  ];
  // Model view (default is VIEW_BASIC)
  // VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`
  // VIEW_FULL: show full information
  optional View view = 2 [(google.api.field_behavior) = OPTIONAL];
}

// GetUserModelResponse represents a response for a model
message GetUserModelResponse {
  // The retrieved model
  Model model = 1;
}

// UpdateUserModelRequest represents a request to update a model
message UpdateUserModelRequest {
  // The model to update
  Model model = 1 [(google.api.field_behavior) = REQUIRED];
  // Mask of fields to update.
  google.protobuf.FieldMask update_mask = 2 [(google.api.field_behavior) = REQUIRED];
}

// UpdateUserModelResponse represents a response for a model
message UpdateUserModelResponse {
  // The updated model
  Model model = 1;
}

// DeleteUserModelRequest represents a request to delete a model
message DeleteUserModelRequest {
  // Resource name of the model.
  // Format: users/{user}/models/{model}
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.instill.tech/Model",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      field_configuration: {path_param_name: "model.name"}
    }
  ];
}

// DeleteUserModelResponse represents an empty response
message DeleteUserModelResponse {}

// RenameUserModelRequest represents a request to rename a model
message RenameUserModelRequest {
  // Resource name for the model to be renamed.
  // Format: users/{user}/models/{model}
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.instill.tech/Model"
  ];

  // New ID of this model
  // Format: users/{user}/models/{new_model_id}
  string new_model_id = 2 [(google.api.field_behavior) = REQUIRED];
}

// RenameUserModelResponse represents a response for a model
message RenameUserModelResponse {
  // Renamed model
  Model model = 1;
}

// PublisUserhModelRequest represents a request to publish a model
message PublishUserModelRequest {
  // Resource name of the model.
  // Format: users/{user}/models/{model}
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.instill.tech/Model"
  ];
}

// PublishUserModelResponse represents a response for the published model
message PublishUserModelResponse {
  // Published model
  Model model = 1;
}

// UnpublishUserModelRequest represents a request to unpublish a model
message UnpublishUserModelRequest {
  // Resource name of the model.
  // Format: users/{user}/models/{model}
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.instill.tech/Model"
  ];
}

// UnpublishUserModelResponse represents a response for the unpublished model
message UnpublishUserModelResponse {
  // Unpublished model
  Model model = 1;
}

// DeployUserModelRequest represents a request to deploy a model to online state
message DeployUserModelRequest {
  // Resource name for the model to be deployed.
  // Format: users/{user}/models/{model}
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.instill.tech/Model"
  ];
}

// DeployUserModelResponse represents a response for a deployed model
message DeployUserModelResponse {
  // Deployed model's id
  // Format: users/{user}/models/{model}
  string model_id = 1;
}

// UndeployUserModelRequest represents a request to undeploy a model to offline
// state
message UndeployUserModelRequest {
  // Resource name for the model to be undeployed.
  // Format: users/{user}/models/{model}
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.instill.tech/Model"
  ];
}

// UndeployUserModelResponse represents a response for a undeployed model
message UndeployUserModelResponse {
  // Undeployed model's id
  // Format: users/{user}/models/{model}
  string model_id = 1;
}

// GetUserModelCardRequest represents a request to query a model's README card
message GetUserModelCardRequest {
  // Resource name of the model card.
  // For example "// Format: users/{user}/models/{model}/readme"
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.instill.tech/ModelCard",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      field_configuration: {path_param_name: "model.name/readme"}
    }
  ];
}

// GetUserModelCardResponse represents a response to fetch a model's README card
message GetUserModelCardResponse {
  // Retrieved model card
  ModelCard readme = 1;
}

// WatchUserModelRequest represents a public request to query
// a model's current state and longrunning progress
message WatchUserModelRequest {
  // Resource name of the model.
  // Format: users/{user}/models/{model}
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.instill.tech/Model",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      field_configuration: {path_param_name: "model.name/watch"}
    }
  ];
}

// WatchUserModelResponse represents a public response to
// fetch a model current state and longrunning progress
message WatchUserModelResponse {
  // Retrieved model state
  Model.State state = 1;
  // Retrieved model logrunning progress
  int32 progress = 2;
}

////////////////////////////////////
//  Trigger methods
////////////////////////////////////

// Input represents the input to trigger a model
message TaskInput {
  // Input type
  oneof input {
    // The classification input
    ClassificationInput classification = 1;
    // The detection input
    DetectionInput detection = 2;
    // The keypoint input
    KeypointInput keypoint = 3;
    // The ocr input
    OcrInput ocr = 4;
    // The instance segmentation input
    InstanceSegmentationInput instance_segmentation = 5;
    // The semantic segmentation input
    SemanticSegmentationInput semantic_segmentation = 6;
    // The text to image input
    TextToImageInput text_to_image = 7;
    // The text generation input
    TextGenerationInput text_generation = 8;
    // The unspecified task input
    UnspecifiedInput unspecified = 9;
  }
}

// TaskInputStream represents the input to trigger a model with stream method
message TaskInputStream {
  // Input type
  oneof input {
    // The classification input
    ClassificationInputStream classification = 1;
    // The detection input
    DetectionInputStream detection = 2;
    // The keypoint input
    KeypointInputStream keypoint = 3;
    // The ocr input
    OcrInputStream ocr = 4;
    // The instance segmentation input
    InstanceSegmentationInputStream instance_segmentation = 5;
    // The semantic segmentation input
    SemanticSegmentationInputStream semantic_segmentation = 6;
    // The text to image input
    TextToImageInput text_to_image = 7;
    // The text generation input
    TextGenerationInput text_generation = 8;
    // The unspecified task input
    UnspecifiedInput unspecified = 9;
  }
}

// TaskOutput represents the output of a CV Task result from a model
message TaskOutput {
  // The inference task output
  oneof output {
    // The classification output
    ClassificationOutput classification = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
    // The detection output
    DetectionOutput detection = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
    // The keypoint output
    KeypointOutput keypoint = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
    // The ocr output
    OcrOutput ocr = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
    // The instance segmentation output
    InstanceSegmentationOutput instance_segmentation = 5 [(google.api.field_behavior) = OUTPUT_ONLY];
    // The semantic segmentation output
    SemanticSegmentationOutput semantic_segmentation = 6 [(google.api.field_behavior) = OUTPUT_ONLY];
    // The text to image output
    TextToImageOutput text_to_image = 7 [(google.api.field_behavior) = OUTPUT_ONLY];
    // The text generation output
    TextGenerationOutput text_generation = 8 [(google.api.field_behavior) = OUTPUT_ONLY];
    // The unspecified task output
    UnspecifiedOutput unspecified = 9 [(google.api.field_behavior) = OUTPUT_ONLY];
  }
}

// TriggerUserModelRequest represents a request to trigger a model
message TriggerUserModelRequest {
  // The resource name of the model to trigger.
  // Format: users/{user}/models/{model}
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.instill.tech/Model"
  ];
  // Input to trigger the model
  repeated TaskInput task_inputs = 2 [(google.api.field_behavior) = REQUIRED];
}

// TriggerUserModelResponse represents a response for the output for
// triggering a model
message TriggerUserModelResponse {
  // The task type
  common.task.v1alpha.Task task = 1;
  // The task output from a model
  repeated TaskOutput task_outputs = 2;
}

// TriggerUserModelBinaryFileUploadRequest represents a request to test a
// model by uploading binary file
message TriggerUserModelBinaryFileUploadRequest {
  // The resource name of the model to trigger.
  // Format: users/{user}/models/{model}
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.instill.tech/Model"
  ];
  // Input to trigger the model
  TaskInputStream task_input = 2 [(google.api.field_behavior) = REQUIRED];
}

// TriggerUserModelBinaryFileUploadResponse represents a response for the
// output for testing a model
message TriggerUserModelBinaryFileUploadResponse {
  // The task type
  common.task.v1alpha.Task task = 1 [(google.api.field_behavior) = REQUIRED];
  // The task output from a model
  repeated TaskOutput task_outputs = 2 [(google.api.field_behavior) = REQUIRED];
}

// TestUserModelRequest represents a request to test a model
message TestUserModelRequest {
  // The resource name of the model to trigger.
  // Format: users/{user}/models/{model}
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.instill.tech/Model"
  ];
  // Input to trigger the model
  repeated TaskInput task_inputs = 2 [(google.api.field_behavior) = REQUIRED];
}

// TestUserModelResponse represents a response for the output for
// testing a model
message TestUserModelResponse {
  // The task type
  common.task.v1alpha.Task task = 1 [(google.api.field_behavior) = REQUIRED];
  // The task output from a model
  repeated TaskOutput task_outputs = 2 [(google.api.field_behavior) = REQUIRED];
}

// TestUserModelBinaryFileUploadRequest represents a request to test a
// model by uploading binary file
message TestUserModelBinaryFileUploadRequest {
  // The resource name of the model to trigger.
  // Format: users/{user}/models/{model}
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "api.instill.tech/Model"
  ];
  // Input to trigger the model
  TaskInputStream task_input = 2 [(google.api.field_behavior) = REQUIRED];
}

// TestUserModelBinaryFileUploadResponse represents a response for the
// output for testing a model
message TestUserModelBinaryFileUploadResponse {
  // The task type
  common.task.v1alpha.Task task = 1 [(google.api.field_behavior) = REQUIRED];
  // The task output from a model
  repeated TaskOutput task_outputs = 2 [(google.api.field_behavior) = REQUIRED];
}

// GerModelOperationRequest represents a request to query a model operation
message GetModelOperationRequest {
  // The name of the operation resource.
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  // View (default is VIEW_BASIC)
  // VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`,
  // `Model.configuration` VIEW_FULL: show full information
  optional View view = 2 [(google.api.field_behavior) = OPTIONAL];
}

// GetModelOperationResponse represents a response for a model operation
message GetModelOperationResponse {
  // The retrieved model operation
  google.longrunning.Operation operation = 1;
}

// ========== Private endpoints

// ListModelsAdminRequest represents a request to list all models from all users
// by admin
message ListModelsAdminRequest {
  // Page size: the maximum number of resources to return. The service may
  // return fewer than this value. If unspecified, at most 10 models will be
  // returned. The maximum value is 100; values above 100 will be coereced to
  // 100.
  optional int64 page_size = 1 [(google.api.field_behavior) = OPTIONAL];
  // Page token
  optional string page_token = 2 [(google.api.field_behavior) = OPTIONAL];
  // Model view (default is VIEW_BASIC)
  // VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`
  // VIEW_FULL: show full information
  optional View view = 3 [(google.api.field_behavior) = OPTIONAL];
}

// ListModelsAdminResponse represents a response for a list of models
message ListModelsAdminResponse {
  // a list of Models
  repeated Model models = 1;
  // Next page token
  string next_page_token = 2;
  // Total count of models
  int64 total_size = 3;
}

// LookUpModelAdminRequest represents a request to query a model via
// permalink by admin
message LookUpModelAdminRequest {
  // Permalink of a model. For example:
  // "models/{uid}"
  string permalink = 1 [(google.api.field_behavior) = REQUIRED];
  // Model view (default is VIEW_BASIC)
  // VIEW_UNSPECIFIED/VIEW_BASIC: omit `Model.configuration`
  // VIEW_FULL: show full information
  optional View view = 2 [(google.api.field_behavior) = OPTIONAL];
}

// LookUpModelResponse represents a response for a model
message LookUpModelAdminResponse {
  // A model resource
  Model model = 1;
}

// CheckModelAdminRequest represents a private request to query
// a model current state and longrunning progress
message CheckModelAdminRequest {
  // Permalink of a model. For example:
  // "models/{uid}"
  string model_permalink = 1 [(google.api.field_behavior) = REQUIRED];
}

// CheckModelAdminResponse represents a response to fetch a model's
// current state and longrunning progress
message CheckModelAdminResponse {
  // Retrieved model state
  Model.State state = 1;
}

// DeployModelAdminRequest represents a request to deploy a model to online state
message DeployModelAdminRequest {
  // Permalink for the model to be deployed.
  // Format: "models/{uid}"
  string model_permalink = 1 [(google.api.field_behavior) = REQUIRED];
}

// DeployModelAdminResponse represents a response for a deployed model
message DeployModelAdminResponse {
  // Deploy operation message
  google.longrunning.Operation operation = 1;
}

// UndeployModelAdminRequest represents a request to undeploy a model to offline
// state
message UndeployModelAdminRequest {
  // Permalink for the model to be undeployed.
  // Format: "models/{uid}"
  string model_permalink = 1 [(google.api.field_behavior) = REQUIRED];
}

// UndeployModelAdminResponse represents a response for a undeployed model
message UndeployModelAdminResponse {
  // Undeploy operation message
  google.longrunning.Operation operation = 1;
}
