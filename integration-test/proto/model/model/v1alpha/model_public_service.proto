syntax = "proto3";

package model.model.v1alpha;

import "../../../common/healthcheck.proto";
import "../../../model/model/v1alpha/model.proto";
import "../../../model/model/v1alpha/model_definition.proto";
// Google API
import "google/api/annotations.proto";
import "google/api/client.proto";

// Model service responds to external access
service ModelPublicService {
  option (google.api.default_host) = "api.instill.tech";

  // Liveness method receives a LivenessRequest message and returns a
  // LivenessResponse message.
  // See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
  rpc Liveness(LivenessRequest) returns (LivenessResponse) {
    option (google.api.http) = {
      get: "/v1alpha/__liveness"
      additional_bindings: [
        {get: "/v1alpha/health/model"}]
    };
  }

  // Readiness method receives a ReadinessRequest message and returns a
  // ReadinessResponse message.
  // See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
  rpc Readiness(ReadinessRequest) returns (ReadinessResponse) {
    option (google.api.http) = {
      get: "/v1alpha/__readiness"
      additional_bindings: [
        {get: "/v1alpha/ready/model"}]
    };
  }

  // ListModelDefinitions method receives a ListModelDefinitionsRequest message
  // and returns a ListModelDefinitionsResponse
  rpc ListModelDefinitions(ListModelDefinitionsRequest) returns (ListModelDefinitionsResponse) {
    option (google.api.http) = {get: "/v1alpha/model-definitions"};
  }

  // GetModelDefinition method receives a GetModelDefinitionRequest message and
  // returns a GetModelDefinitionResponse
  rpc GetModelDefinition(GetModelDefinitionRequest) returns (GetModelDefinitionResponse) {
    option (google.api.http) = {get: "/v1alpha/{name=model-definitions/*}"};
    option (google.api.method_signature) = "name";
  }

  // ListModels method receives a ListModelsRequest message and returns a
  // ListModelsResponse
  rpc ListModels(ListModelsRequest) returns (ListModelsResponse) {
    option (google.api.http) = {get: "/v1alpha/models"};
  }

  // LisUsertModels method receives a ListUserModelsRequest message and returns a
  // ListUserModelsResponse
  rpc ListUserModels(ListUserModelsRequest) returns (ListUserModelsResponse) {
    option (google.api.http) = {get: "/v1alpha/{parent=users/*}/models"};
    option (google.api.method_signature) = "parent";
  }

  // CreateUserModel method receives a CreateUserModelRequest message and returns a
  // CreateUserModelResponse
  rpc CreateUserModel(CreateUserModelRequest) returns (CreateUserModelResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{parent=users/*}/models"
      body: "model"
    };
    option (google.api.method_signature) = "parent,model";
  }

  // CreateUserModelBinaryFileUpload method receives a
  // CreateUserModelBinaryFileUploadRequest message and returns a
  // CreateUserModelBinaryFileUploadResponse message.
  //
  // Endpoint: "POST /v1alpha/users/*/models:multipart"
  rpc CreateUserModelBinaryFileUpload(stream CreateUserModelBinaryFileUploadRequest) returns (CreateUserModelBinaryFileUploadResponse) {
    option (google.api.method_signature) = "id,model_definition,content,parent";
  }

  // GetUserModel method receives a GetUserModelRequest message and returns a
  // GetUserModelResponse
  rpc GetUserModel(GetUserModelRequest) returns (GetUserModelResponse) {
    option (google.api.http) = {get: "/v1alpha/{name=users/*/models/*}"};
    option (google.api.method_signature) = "name";
  }

  // UpdateUserModel method receives a UpdateUserModelRequest message and returns a
  // UpdateUserModelResponse
  rpc UpdateUserModel(UpdateUserModelRequest) returns (UpdateUserModelResponse) {
    option (google.api.http) = {
      patch: "/v1alpha/{model.name=users/*/models/*}"
      body: "model"
    };
    option (google.api.method_signature) = "model,update_mask";
  }

  // DeleteUserModel method receives a DeleteUserModelRequest message and returns a
  // DeleteUserModelResponse
  rpc DeleteUserModel(DeleteUserModelRequest) returns (DeleteUserModelResponse) {
    option (google.api.http) = {delete: "/v1alpha/{name=users/*/models/*}"};
    option (google.api.method_signature) = "name";
  }

 // LookUpUserModel method receives a LookUpUserModelRequest message and returns a
  // LookUpUserModelResponse
  rpc LookUpUserModel(LookUpUserModelRequest) returns (LookUpUserModelResponse) {
    option (google.api.http) = {get: "/v1alpha/{permalink=users/*/models/*}/lookUp"};
    option (google.api.method_signature) = "permalink";
  }

  // RenameUserModel method rename a model
  rpc RenameUserModel(RenameUserModelRequest) returns (RenameUserModelResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{name=users/*/models/*}/rename"
      body: "*"
    };
    option (google.api.method_signature) = "name,new_model_id";
  }

  // PublishUserModel method receives a PublisUserhModelRequest message and returns a
  // PublishUserModelResponse
  rpc PublishUserModel(PublishUserModelRequest) returns (PublishUserModelResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{name=users/*/models/*}/publish"
      body: "*"
    };
    option (google.api.method_signature) = "name";
  }

  // UnpublishUserModel method receives a UnpublishUserModelRequest message and returns
  // a UnpublishUserModelResponse
  rpc UnpublishUserModel(UnpublishUserModelRequest) returns (UnpublishUserModelResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{name=users/*/models/*}/unpublish"
      body: "*"
    };
    option (google.api.method_signature) = "name";
  }

  // DeployUserModel deploy a model to online state
  rpc DeployUserModel(DeployUserModelRequest) returns (DeployUserModelResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{name=users/*/models/*}/deploy"
      body: "*"
    };
    option (google.api.method_signature) = "name";
  }

  // UndeployUserModel undeploy a model to offline state
  rpc UndeployUserModel(UndeployUserModelRequest) returns (UndeployUserModelResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{name=users/*/models/*}/undeploy"
      body: "*"
    };
    option (google.api.method_signature) = "name";
  }

  // GetUserModelCard method receives a GetUserModelCardRequest message
  // and returns a GetUserModelCardResponseUser
  rpc GetUserModelCard(GetUserModelCardRequest) returns (GetUserModelCardResponse) {
    option (google.api.http) = {get: "/v1alpha/{name=users/*/models/*/readme}"};
    option (google.api.method_signature) = "name";
  }

  // WatchUserModel method receives a WatchUserModelRequest message
  // and returns a WatchModelResponse
  rpc WatchUserModel(WatchUserModelRequest) returns (WatchUserModelResponse) {
    option (google.api.http) = {get: "/v1alpha/{name=users/*/models/*}/watch"};
    option (google.api.method_signature) = "name";
  }

  ///////////////////////////////////////////////////////
  //
  // TriggerUserModel method receives a TriggerUserModelRequest message
  // and returns a TriggerUserModelResponse message.
  rpc TriggerUserModel(TriggerUserModelRequest) returns (TriggerUserModelResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{name=users/*/models/*}/trigger"
      body: "*"
    };
    option (google.api.method_signature) = "name,inputs";
  }

  // TriggerUserModelBinaryFileUpload method receives a
  // TriggerUserModelBinaryFileUploadRequest message and returns a
  // TriggerUserModelBinaryFileUploadResponse message.
  //
  // Endpoint: "POST/v1alpha/{name=models/*}/trigger-multipart"
  rpc TriggerUserModelBinaryFileUpload(stream TriggerUserModelBinaryFileUploadRequest) returns (TriggerUserModelBinaryFileUploadResponse) {
    option (google.api.method_signature) = "name,file";
  }

  // TestUserModel method receives a TestUserModelRequest message
  // and returns a TestUserModelResponse message.
  rpc TestUserModel(TestUserModelRequest) returns (TestUserModelResponse) {
    option (google.api.http) = {
      post: "/v1alpha/{name=users/*/models/*}/test"
      body: "*"
    };
    option (google.api.method_signature) = "name,inputs";
  }

  // TestUserModelBinaryFileUpload method receives a
  // TestUserModelBinaryFileUploadRequest message and returns a
  // TestUserModelBinaryFileUploadResponse message.
  //
  // Endpoint: "POST/v1alpha/{name=users/*/models/*}/test-multipart"
  rpc TestUserModelBinaryFileUpload(stream TestUserModelBinaryFileUploadRequest) returns (TestUserModelBinaryFileUploadResponse) {
    option (google.api.method_signature) = "name,file";
  }

  // GetModelOperation method receives a
  // GetModelOperationRequest message and returns a
  // GetModelOperationResponse message.
  rpc GetModelOperation(GetModelOperationRequest) returns (GetModelOperationResponse) {
    option (google.api.http) = {get: "/v1alpha/{name=operations/*}"};
    option (google.api.method_signature) = "name";
  }
}
