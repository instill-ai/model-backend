version: "3.9"

networks:
  default:
    name: instill-network

volumes:
  conda_pack:
    name: conda-pack
  model_repository:
    name: model-repository

services:
  model_backend_migrate:
    container_name: model-backend-migrate
    build:
      context: .
    image: instill/model-backend:dev
    restart: on-failure
    environment:
      CFG_DATABASE_HOST: pg_sql
      CFG_DATABASE_PORT: 5432
      CFG_DATABASE_USERNAME: postgres
      CFG_DATABASE_PASSWORD: password
    entrypoint: ./model-backend-migrate
    depends_on:
      pg_sql:
        condition: service_healthy

  model_backend_init:
    container_name: model-backend-init
    build:
      context: .
    image: instill/model-backend:dev
    restart: on-failure
    environment:
      CFG_DATABASE_HOST: pg_sql
      CFG_DATABASE_PORT: 5432
      CFG_DATABASE_USERNAME: postgres
      CFG_DATABASE_PASSWORD: password
    entrypoint: ./model-backend-init
    depends_on:
      - model_backend_migrate

  model_backend:
    container_name: model-backend
    build:
      context: .
    image: instill/model-backend:dev
    restart: unless-stopped
    environment:
      CFG_SERVER_PORT: 8083
      CFG_DATABASE_HOST: pg_sql
      CFG_DATABASE_PORT: 5432
      CFG_DATABASE_USERNAME: postgres
      CFG_DATABASE_PASSWORD: password
      CFG_TRITONSERVER_GRPCURI: triton-server:8001
      CFG_TRITONSERVER_MODELSTORE: /model-repository
    ports:
      - 8083:8083
    volumes:
      - model_repository:/model-repository
    depends_on:
      triton_server:
        condition: service_healthy
      model_backend_init:
        condition: service_completed_successfully

  triton_server:
    container_name: triton-server
    image: nvcr.io/nvidia/tritonserver:22.05-py3
    restart: unless-stopped
    command: tritonserver --model-store=/model-repository --model-control-mode=explicit --allow-http=true --strict-model-config=false
    volumes:
      - model_repository:/model-repository
      - conda_pack:/conda-pack
    ports:
      - 8001:8001
    healthcheck:
      test: ["CMD-SHELL", "curl localhost:8000/v2/health/ready"]
      timeout: 20s
      retries: 10
    shm_size: 2gb
    ulimits:
      memlock: -1
      stack: 67108864
    depends_on:
      - triton_conda_env

  triton_conda_env:
    container_name: triton-conda-env
    image: instill/triton-conda-env:v0.2.1-alpha-cpu
    restart: on-failure
    volumes:
      - conda_pack:/conda-pack

  pg_sql:
    container_name: pg-sql
    image: postgres:14.1-alpine
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      timeout: 20s
      retries: 10
