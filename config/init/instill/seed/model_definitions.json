[
  {
    "id": "container",
    "uid": "3b4265b7-7d8c-42f7-b5a9-13737d7dee1d",
    "title": "Container",
    "documentationUrl": "https://www.instill.tech/docs/import-models/container",
    "icon": "container.svg",
    "releaseStage": "alpha",
    "modelSpec": {
      "modelSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Containerized Model Specification",
        "type": "object",
        "required": [
          "id",
          "model_definition",
          "configuration",
          "visibility",
          "task",
          "region",
          "hardware"
        ],
        "instillShortDescription": "",
        "additionalProperties": true,
        "minProperties": 7,
        "maxProperties": 12,
        "properties": {
          "id": {
            "type": "string",
            "title": "Name",
            "minLength": 1,
            "maxLength": 63,
            "description": "The model name"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "maxLength": 1023,
            "description": "Fill with a short description of your model."
          },
          "model_definition": {
            "type": "string",
            "const": "model-definitions/container",
            "title": "Model definition resource name",
            "description": "The resource name of the model definition"
          },
          "configuration": {
            "type": "object",
            "title": "Configuration",
            "description": "Model configuration JSON that has been validated using the `model_spec` JSON schema of a ModelDefinition"
          },
          "task": {
            "oneOf": [
              {
                "const": "TASK_CLASSIFICATION",
                "instillShortDescription": "Classify images into predefined categories.",
                "title": "Classification"
              },
              {
                "const": "TASK_DETECTION",
                "instillShortDescription": "Detect and localize multiple objects in images.",
                "title": "Detection"
              },
              {
                "const": "TASK_KEYPOINT",
                "instillShortDescription": "Detect and localize multiple keypoints of objects in images.",
                "title": "Keypoint"
              },
              {
                "const": "TASK_OCR",
                "instillShortDescription": "Detect and recognize text in images.",
                "title": "Ocr"
              },
              {
                "const": "TASK_INSTANCE_SEGMENTATION",
                "instillShortDescription": "Detect, localize and delineate multiple objects in images.",
                "title": "Instance Segmentation"
              },
              {
                "const": "TASK_SEMANTIC_SEGMENTATION",
                "instillShortDescription": "Classify image pixels into predefined categories.",
                "title": "Semantic Segmentation"
              },
              {
                "const": "TASK_TEXT_GENERATION",
                "instillShortDescription": "Generate texts from input text prompts.",
                "title": "Text Generation"
              },
              {
                "const": "TASK_TEXT_GENERATION_CHAT",
                "instillShortDescription": "Generate texts from input text prompts and chat history.",
                "title": "Text Generation Chat"
              },
              {
                "const": "TASK_TEXT_TO_IMAGE",
                "instillShortDescription": "Generate images from input text prompts.",
                "title": "Text To Image"
              },
              {
                "const": "TASK_IMAGE_TO_IMAGE",
                "instillShortDescription": "Generate image from input text prompt and image.",
                "title": "Image To Image"
              },
              {
                "const": "TASK_VISUAL_QUESTION_ANSWERING",
                "instillShortDescription": "Answer questions based on a prompt and an image.",
                "title": "Visual Question Answering"
              }
            ]
          },
          "visibility": {
            "oneOf": [
              {
                "const": "VISIBILITY_PRIVATE",
                "instillShortDescription": "The model is only accessible by you.",
                "title": "Private"
              },
              {
                "const": "VISIBILITY_PUBLIC",
                "instillShortDescription": "The model is viewable by all Instill user.",
                "title": "Public"
              }
            ]
          },
          "region": {
            "oneOf": [
              {
                "const": "REGION_GCP_EUROPE_WEST4",
                "instillShortDescription": "Deploy model onto GCP in Europe West4 region",
                "title": "GCP europe-west4"
              },
              {
                "const": "REGION_LOCAL",
                "instillShortDescription": "Deploy model on self-hosted instill-core",
                "title": "Self-host Instill Core"
              }
            ]
          },
          "readme": {
            "type": "string",
            "title": "Readme",
            "description": "The readme of the model"
          },
          "source_url": {
            "type": "string",
            "format": "uri",
            "title": "Source URL",
            "maxLength": 63,
            "description": "The source code url of the model"
          },
          "documentation_url": {
            "type": "string",
            "format": "uri",
            "title": "Documentation URL",
            "maxLength": 63,
            "description": "The documentation url of the model"
          },
          "license": {
            "type": "string",
            "format": "uri",
            "title": "License",
            "description": "The license of the model"
          }
        },
        "allOf": [
          {
            "if": {
              "properties": {
                "region": {
                  "const": "REGION_GCP_EUROPE_WEST4"
                }
              }
            },
            "then": {
              "properties": {
                "hardware": {
                  "oneOf": [
                    {
                      "const": "CPU",
                      "instillShortDescription": "Deploy model that runs on CPU",
                      "description": "Deploy model that runs on CPU",
                      "title": "CPU"
                    },
                    {
                      "const": "NVIDIA_TESLA_T4",
                      "instillShortDescription": "Deploy model that runs on Nvidia T4 GPU",
                      "description": "Deploy model that runs on Nvidia T4 GPU",
                      "title": "Nvidia Tesla T4"
                    },
                    {
                      "const": "NVIDIA_L4",
                      "instillShortDescription": "Deploy model that runs on Nvidia L4 GPU",
                      "description": "Deploy model that runs on Nvidia L4 GPU",
                      "title": "Nvidia L4"
                    },
                    {
                      "const": "NVIDIA_A100",
                      "instillShortDescription": "Deploy model that runs on Nvidia A100 40G GPU",
                      "description": "Deploy model that runs on Nvidia A100 40G GPU",
                      "title": "NVIDIA A100 40G"
                    },
                    {
                      "const": "NVIDIA_A100_80G",
                      "instillShortDescription": "Deploy model that runs on Nvidia A100 80G GPU",
                      "description": "Deploy model that runs on Nvidia A100 80G GPU",
                      "title": "NVIDIA A100 80G"
                    }
                  ]
                }
              }
            }
          },
          {
            "if": {
              "properties": {
                "region": {
                  "const": "REGION_LOCAL"
                }
              }
            },
            "then": {
              "properties": {
                "hardware": {
                  "anyOf": [
                    {
                      "const": "CPU",
                      "instillShortDescription": "Deploy model that runs on CPU",
                      "description": "Deploy model that runs on CPU",
                      "title": "CPU"
                    },
                    {
                      "const": "GPU",
                      "instillShortDescription": "Deploy model that runs on GPU",
                      "description": "Deploy model that runs on GPU",
                      "title": "GPU"
                    },
                    {
                      "type": "string",
                      "title": "Custom",
                      "maxLength": 63,
                      "description": "Deploy the model that runs on the custom resource type you've setup",
                      "instillShortDescription": "Deploy the model that runs on the custom resource type you've setup"
                    }
                  ]
                }
              }
            }
          }
        ]
      }
      ,
      "configurationSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Containerized Model Specification",
        "type": "object",
        "required": [],
        "minProperties": 0,
        "maxProperties": 0,
        "properties": {}
      }
    }
  }
]
