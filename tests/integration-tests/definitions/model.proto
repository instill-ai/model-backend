syntax = "proto3";

package instill.model.v1alpha;

// Protobuf standard
import "google/protobuf/struct.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

// Google api
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";

// LivenessRequest represents a request to check a service liveness status
message LivenessRequest {
  // Service name to check for its liveness status
  string service = 1;
}

// LivenessResponse represents a response for a service liveness status
message LivenessResponse {
  // ServingStatus enumerates the status of a queried service
  enum ServingStatus {
    // Serving status: UNSPECIFIED
    SERVING_STATUS_UNSPECIFIED = 0;
    // Serving status: SERVING
    SERVING_STATUS_SERVING = 1;
    // Serving status: NOT SERVING
    SERVING_STATUS_NOT_SERVING = 2;
  }

  // Status is the instance of the enum type ServingStatus
  ServingStatus status = 1;
}

// ReadinessRequest represents a request to check a service readiness status
message ReadinessRequest {
  // Service name to check for its readiness status
  string service = 1;
}

// ReadinessResponse represents a response for a service readiness status
message ReadinessResponse {
  // ServingStatus enumerates the status of a queried service
  enum ServingStatus {
    // Serving status: UNSPECIFIED
    SERVING_STATUS_UNSPECIFIED = 0;
    // Serving status: SERVING
    SERVING_STATUS_SERVING = 1;
    // Serving status: NOT SERVING
    SERVING_STATUS_NOT_SERVING = 2;
  }

  // Status is the value of ServingStatus enum type
  ServingStatus status = 1;
}

// ModelVersion represents the version of a model
message ModelVersion {

  // Status enumerates the status of a model version
  enum Status {
    // Status: UNSPECIFIED
    STATUS_UNSPECIFIED = 0;
    // Status: OFFLINE
    STATUS_OFFLINE = 1;
    // Status: ONLINE
    STATUS_ONLINE = 2;
    // Status: ERROR
    STATUS_ERROR = 3;
  }

  // Model version
  uint64 version = 1;
  // Model version corresponding model ID
  uint64 model_id = 2;
  // Model version description
  string description = 3;
  // Model version creation time
  google.protobuf.Timestamp created_at = 4;
  // Model version update time
  google.protobuf.Timestamp updated_at = 5;
  // Model version status
  Status status = 6;
}

// Model represents the content of a model
message Model {

  // Task enumerates the task type of a model
  enum Task {
    // Task: UNSPECIFIED
    TASK_UNSPECIFIED = 0;
    // Task: CLASSIFICATION
    TASK_CLASSIFICATION = 1;
    // Task: DETECTION
    TASK_DETECTION = 2;
  }

  // Model ID
  uint64 id = 1 [ (google.api.field_behavior) = OPTIONAL ];
  // Model name
  string name = 2;
  // Model full name (i.e., [user_name/org_name]/model_name)
  string full_name = 3 [ (google.api.field_behavior) = OUTPUT_ONLY ];
  // Model task
  Task task = 4;
  // Model versions
  repeated ModelVersion model_versions = 5;
}

// CreateModelBinaryFileUploadRequest represents a request to create a model
message CreateModelBinaryFileUploadRequest {
  // Model name
  string name = 1 [ (google.api.field_behavior) = REQUIRED ];
  // Model content in bytes
  bytes bytes = 2 [ (google.api.field_behavior) = REQUIRED ];
  // Model description
  string description = 3 [ (google.api.field_behavior) = OPTIONAL ];
  // Model task type
  Model.Task task = 4 [ (google.api.field_behavior) = OPTIONAL ];
}

// CreateModelBinaryFileUploadResponse represents a response for a model
// instance
message CreateModelBinaryFileUploadResponse {
  // A model instance
  Model model = 1 [ (google.api.field_behavior) = REQUIRED ];
}

// UpdateModelVersionPatch represents a patch to update a model
message UpdateModelVersionPatch {
  // Model version description
  string description = 1;
  // Model version status
  ModelVersion.Status status = 2;
}

// CreateModelRequest represents a request to update a model
message UpdateModelVersionRequest {
  // Model name
  string name = 1 [ (google.api.field_behavior) = REQUIRED ];
  // Model version
  uint64 version = 2 [ (google.api.field_behavior) = REQUIRED ];
  // Model version patch to update
  UpdateModelVersionPatch version_patch = 3
      [ (google.api.field_behavior) = REQUIRED ];
  // Update mask for a model instance
  google.protobuf.FieldMask field_mask = 4
      [ (google.api.field_behavior) = REQUIRED ];
}

// UpdateModelVersionResponse represents a response for a model version instance
message UpdateModelVersionResponse {
  // A model version instance
  ModelVersion model_version = 1 [ (google.api.field_behavior) = REQUIRED ];
}

// ListModelRequest represents a request to list models
message ListModelRequest {}

// ListModelResponse represents a response for a list of models
message ListModelResponse {
  // A list of models
  repeated Model models = 1;
}

// GetModelRequest represents a request to query a model
message GetModelRequest {
  // Model name
  string name = 1 [ (google.api.field_behavior) = REQUIRED ];
}

// GetModelResponse represents a response for a model instance
message GetModelResponse {
  // A model instance
  Model model = 1 [ (google.api.field_behavior) = REQUIRED ];
}

// DeleteModelRequest represents a request to delete a model
message DeleteModelRequest {
  // Model name
  string name = 1 [ (google.api.field_behavior) = REQUIRED ];
}

// DeleteModelResponse represents an empty response
message DeleteModelResponse {}

// DeleteModelVersionRequest represents a request to delete a model version
message DeleteModelVersionRequest {
  // Model name
  string name = 1 [ (google.api.field_behavior) = REQUIRED ];
  // Model version
  uint64 version = 2 [ (google.api.field_behavior) = REQUIRED ];
}

// DeleteModelVersionResponse represents an empty response
message DeleteModelVersionResponse {}

// Input represents the input to a model
message Input {
  // Input type
  oneof type {
    // Image type URL
    string image_url = 1;
    // Image type base64
    string image_base64 = 2;
  }
}

// TriggerModelRequest represents a request to trigger a model
message TriggerModelRequest {
  // Model name
  string name = 1 [ (google.api.field_behavior) = REQUIRED ];
  // Model version
  uint64 version = 2 [ (google.api.field_behavior) = REQUIRED ];
  // Input to the model
  repeated Input inputs = 3 [ (google.api.field_behavior) = REQUIRED ];
}

// TriggerModelResponse represents a response for the output of a model
message TriggerModelResponse {
  // Output from a model
  google.protobuf.Struct output = 1;
}

// TriggerModelBinaryFileUploadRequest represents a request to trigger a model
message TriggerModelBinaryFileUploadRequest {
  // Model name
  string name = 1 [ (google.api.field_behavior) = REQUIRED ];
  // Model version
  uint64 version = 2 [ (google.api.field_behavior) = REQUIRED ];
  // Model content in bytes
  bytes bytes = 3 [ (google.api.field_behavior) = REQUIRED ];
}

// TriggerModelBinaryFileUploadResponse represents a response for the output of
// a model
message TriggerModelBinaryFileUploadResponse {
  // Output from a model
  google.protobuf.Struct output = 1;
}

// ClassificationOutput represents the output of classification task
message ClassificationOutput {
  // Classification cateogry
  string category = 1;
  // Classification score
  float score = 2;
}

// ClassificationOutputs represents a list of classification task outputs
message ClassificationOutputs {
  // A list of classification outputs
  repeated ClassificationOutput classification_outputs = 1;
}

// BoundingBox represents the bounding box data structure
message BoundingBox {
  // Bounding box top y-axis value
  float top = 1;
  // Bounding box left x-axis value
  float left = 2;
  // Bounding box width value
  float width = 3;
  // Bounding box height value
  float height = 4;
}

// BoundingBoxObject represents a predicted bounding box object
message BoundingBoxObject {
  // Bounding box object category
  string category = 1;
  // Bounding box object scroe
  float score = 2;
  // Bounding box
  BoundingBox bounding_box = 3;
}

// DetectionOutput represents the output of detection task
message DetectionOutput {
  // A list of buonding box objects
  repeated BoundingBoxObject bounding_box_objects = 1;
}

// DetectionOutputs represents a list of detection task outputs
message DetectionOutputs {
  // A list of detection outputs
  repeated DetectionOutput detection_outputs = 1;
}

// Model service responds to incoming model requests.
service ModelService {

  // Liveness method receives a LivenessRequest message and returns a
  // LivenessResponse message.
  // See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
  rpc Liveness(LivenessRequest) returns (LivenessResponse) {
    option (google.api.http) = {
      get : "/__liveness"
      additional_bindings : [ {get : "/health/model"} ]
    };
  }

  // Readiness method receives a ReadinessRequest message and returns a
  // ReadinessResponse message.
  // See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
  rpc Readiness(ReadinessRequest) returns (ReadinessResponse) {
    option (google.api.http) = {
      get : "/__readiness"
    };
  }

  // CreateModelBinaryFileUpload method receives a
  // CreateModelBinaryFileUploadRequest message and returns a
  // CreateModelBinaryFileUploadResponse message.
  rpc CreateModelBinaryFileUpload(stream CreateModelBinaryFileUploadRequest)
      returns (CreateModelBinaryFileUploadResponse) {}

  // CreateModel method receives a CreateModelRequest message and returns
  // a CreateModelResponse message.
  rpc ListModel(ListModelRequest) returns (ListModelResponse) {
    option (google.api.http) = {
      get : "/models"
    };
  }

  // GetModel method receives a GetModelRequest message and returns
  // a GetModelResponse message.
  rpc GetModel(GetModelRequest) returns (GetModelResponse) {
    option (google.api.http) = {
      get : "/models/{name}"
    };
  }

  // UpdateModelVersion method receives a UpdateModelVersionRequest message and
  // returns a UpdateModelVersionResponse message.
  rpc UpdateModelVersion(UpdateModelVersionRequest)
      returns (UpdateModelVersionResponse) {
    option (google.api.http) = {
      patch : "/models/{name}/versions/{version}"
      body : "version_patch"
    };
  }

  // DeleteModel method receives a DeleteModelRequest message and returns
  // a DeleteModelResponse message.
  rpc DeleteModel(DeleteModelRequest) returns (DeleteModelResponse) {
    option (google.api.http) = {
      delete : "/models/{name}"
    };
  }

  // DeleteModelVersion method receives a DeleteModelVersionRequest message and
  // returns a DeleteModelVersionResponse message.
  rpc DeleteModelVersion(DeleteModelVersionRequest)
      returns (DeleteModelVersionResponse) {
    option (google.api.http) = {
      delete : "/models/{name}/versions/{version}"
    };
  }

  // TriggerModel method receives a TriggerModelRequest message and
  // returns a TriggerModelResponse message.
  rpc TriggerModel(TriggerModelRequest) returns (TriggerModelResponse) {
    option (google.api.http) = {
      post : "/models/{name}/versions/{version}/outputs"
      body : "*"
    };
  }

  // TriggerModelBinaryFileUpload method receives a
  // TriggerModelBinaryFileUploadRequest message and returns a
  // TriggerModelBinaryFileUploadResponse message.
  rpc TriggerModelBinaryFileUpload(stream TriggerModelBinaryFileUploadRequest)
      returns (TriggerModelBinaryFileUploadResponse) {}
}
